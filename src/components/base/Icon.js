import React from "react";

export default function Icon({
  type = "icon",
  color = "#666",
  as = "span",
  className = "",
  ...props
}) {
  if (as === "span")
    return (
      <span
        className={`icon icon-${type}${
          className !== "" ? " " + className : ""
        }`}
        {...props}
      >
        {getIcon(type, color)}
      </span>
    );
  else if (as === "button")
    return (
      <button
        type="button"
        className={`btn-icon icon icon-${type}${
          className !== "" ? " " + className : ""
        }`}
        {...props}
      >
        {getIcon(type, color)}
      </button>
    );
}

const getIcon = (type, color) => {
  return type === "search" ? (
    <Search color={color} />
  ) : type === "user" ? (
    <User color={color} />
  ) : type === "user_pro" ? (
    <UserPro color={color} />
  ) : type === "user_enterprise" ? (
    <UserEnterprise color={color} />
  ) : type === "forward" ? (
    <Forward color={color} />
  ) : type === "close" ? (
    <Close color={color} />
  ) : type === "check" ? (
    <Check color={color} />
  ) : type === "plus" ? (
    <Plus color={color} />
  ) : type === "minus" ? (
    <Minus color={color} />
  ) : type === "dropdown" ? (
    <Dropdown color={color} />
  ) : type === "chevron" ? (
    <Chevron color={color} />
  ) : type === "license" ? (
    <License color={color} />
  ) : type === "house" ? (
    <House color={color} />
  ) : type === "car" ? (
    <Car color={color} />
  ) : type === "boat" ? (
    <Boat color={color} />
  ) : type === "mask" ? (
    <Mask color={color} />
  ) : type === "gloves" ? (
    <Gloves color={color} />
  ) : type === "sanitizer" ? (
    <Sanitizer color={color} />
  ) : type === "vitaminC" ? (
    <VitaminC color={color} />
  ) : type === "vitaminD" ? (
    <VitaminD color={color} />
  ) : type === "vitaminZn" ? (
    <VitaminZn color={color} />
  ) : type === "store" ? (
    <Store color={color} />
  ) : type === "cloud_verify" ? (
    <CloudVerify color={color} />
  ) : type === "copy" ? (
    <Copy color={color} />
  ) : type === "settings" ? (
    <Settings color={color} />
  ) : type === "warning" ? (
    <Warning color={color} />
  ) : type === "scroll_arrow" ? (
    <ScrollArrow color={color} />
  ) : type === "location" ? (
    <Location color={color} />
  ) : (
    ""
  );
};

const Svg = ({ viewBoxWidth, viewBoxHeight, children }) => (
  <svg
    viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    {children}
  </svg>
);

const Search = ({ color }) => (
  <Svg viewBoxWidth={16} viewBoxHeight={16}>
    <circle cx="6.5" cy="6.5" r="5.75" stroke={color} strokeWidth="1.5" />
    <path
      d="M11 11L15 15"
      stroke={color}
      strokeWidth="1.5"
      strokeLinecap="round"
    />
  </Svg>
);

const User = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      d="M12 12C15.3141 12 18 9.31406 18 6C18 2.68594 15.3141 0 12 0C8.68594 0 6 2.68594 6 6C6 9.31406 8.68594 12 12 12ZM16.2 13.5H15.4172C14.3766 13.9781 13.2188 14.25 12 14.25C10.7812 14.25 9.62813 13.9781 8.58281 13.5H7.8C4.32187 13.5 1.5 16.3219 1.5 19.8V21.75C1.5 22.9922 2.50781 24 3.75 24H20.25C21.4922 24 22.5 22.9922 22.5 21.75V19.8C22.5 16.3219 19.6781 13.5 16.2 13.5Z"
      fill={color}
    />
  </Svg>
);

const UserPro = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      d="M16.4719 15.0283L12 19.5002L7.52813 15.0283C4.17656 15.1736 1.5 17.9158 1.5 21.3002V21.7502C1.5 22.9924 2.50781 24.0002 3.75 24.0002H20.25C21.4922 24.0002 22.5 22.9924 22.5 21.7502V21.3002C22.5 17.9158 19.8234 15.1736 16.4719 15.0283ZM2.1375 3.74082L2.4375 3.81113V6.54863C2.10938 6.74551 1.875 7.0877 1.875 7.5002C1.875 7.89395 2.09063 8.22207 2.39531 8.42363L1.66406 11.3439C1.58437 11.6674 1.7625 12.0002 2.02031 12.0002H3.97969C4.2375 12.0002 4.41563 11.6674 4.33594 11.3439L3.60469 8.42363C3.90938 8.22207 4.125 7.89395 4.125 7.5002C4.125 7.0877 3.89062 6.74551 3.5625 6.54863V4.08301L6.65625 4.82832C6.25313 5.63457 6 6.53457 6 7.5002C6 10.8143 8.68594 13.5002 12 13.5002C15.3141 13.5002 18 10.8143 18 7.5002C18 6.53457 17.7516 5.63457 17.3438 4.82832L21.8578 3.74082C22.7109 3.53457 22.7109 2.47051 21.8578 2.26426L12.9328 0.108008C12.3234 -0.0373047 11.6812 -0.0373047 11.0719 0.108008L2.1375 2.25957C1.28906 2.46582 1.28906 3.53457 2.1375 3.74082Z"
      fill={color}
    />
  </Svg>
);

const UserEnterprise = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      d="M19.4953 14.4519L20.6156 11.5175C20.8031 11.0253 20.4422 10.5003 19.9125 10.5003H17.1703C17.6859 9.61436 18.0047 8.59717 18.0047 7.50029V7.48623C19.8422 7.12061 21.0047 6.59092 21.0047 6.00029C21.0047 5.37686 19.725 4.82373 17.7188 4.45342C17.2875 2.91592 16.4531 1.36904 15.8156 0.572168C15.3703 0.0143558 14.6016 -0.159082 13.9641 0.159668L12.6703 0.806543C12.2484 1.01748 11.7516 1.01748 11.3297 0.806543L10.0359 0.159668C9.39844 -0.159082 8.62969 0.0143558 8.18438 0.572168C7.55156 1.36904 6.7125 2.91592 6.28125 4.45342C4.27969 4.82373 3 5.37686 3 6.00029C3 6.59092 4.1625 7.12061 6 7.48623V7.50029C6 8.59717 6.31875 9.61436 6.83438 10.5003H4.13906C3.6 10.5003 3.23906 11.0487 3.45 11.5456L4.65938 14.3675C2.77969 15.4597 1.5 17.4706 1.5 19.8003V21.9003C1.5 23.0581 2.44219 24.0003 3.6 24.0003H20.4C21.5578 24.0003 22.5 23.0581 22.5 21.9003V19.8003C22.5 17.5315 21.2906 15.5628 19.4953 14.4519ZM9.75 22.5003L7.8 13.5003L10.125 15.0003L11.25 16.8753L9.75 22.5003ZM14.25 22.5003L12.75 16.8753L13.875 15.0003L16.2 13.5003L14.25 22.5003ZM16.2047 8.50811C16.0219 9.06592 15.8766 9.66123 15.4313 10.0737C14.9578 10.5097 13.1812 11.1237 12.4312 8.90186C12.3 8.50811 11.7094 8.50811 11.5734 8.90186C10.7766 11.255 8.94844 10.4206 8.57344 10.0737C8.12812 9.66123 7.97812 9.06592 7.8 8.50811C7.7625 8.39092 7.50469 8.24092 7.50469 8.23623V7.72998C8.83125 7.89873 10.3641 8.00186 12.0047 8.00186C13.6453 8.00186 15.1781 7.90342 16.5047 7.72998V8.23623C16.5 8.24092 16.2422 8.38623 16.2047 8.50811Z"
      fill={color}
    />
  </Svg>
);

const Forward = ({ color }) => (
  <Svg viewBoxWidth={16} viewBoxHeight={16}>
    <path
      d="M11 3L14.95 7.93753C14.9792 7.97405 14.9792 8.02595 14.95 8.06247L11 13"
      stroke={color}
      strokeWidth="1.7"
      strokeLinecap="round"
    />
    <path
      d="M15 8L1 8"
      stroke={color}
      strokeWidth="1.7"
      strokeLinecap="round"
    />
  </Svg>
);

const Close = ({ color }) => (
  <Svg viewBoxWidth={16} viewBoxHeight={16}>
    <rect width="16" height="16" rx="8" fill={color} />
    <path
      d="M10.8284 5.17188L5.17151 10.8287"
      stroke="#ffffff"
      strokeWidth="1.7"
      strokeLinecap="round"
    />
    <path
      d="M10.8284 10.8291L5.17152 5.17225"
      stroke="#ffffff"
      strokeWidth="1.7"
      strokeLinecap="round"
    />
  </Svg>
);

const Check = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M18.7212 7.67863C19.1196 8.07697 19.1196 8.7228 18.7212 9.12113L10.4061 17.4363C9.9609 17.8815 9.23909 17.8815 8.79389 17.4363L5.27875 13.9211C4.88041 13.5228 4.88041 12.877 5.27875 12.4786C5.67708 12.0803 6.32291 12.0803 6.72124 12.4786L9.6 15.3574L17.2787 7.67863C17.6771 7.2803 18.3229 7.2803 18.7212 7.67863Z"
      fill={color}
    />
  </Svg>
);

const Plus = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <rect width="24" height="24" rx="8" fill={color} />
    <path d="M12 7V17" stroke="#ffffff" strokeWidth="2" strokeLinecap="round" />
    <path
      d="M17 12L7 12"
      stroke="#ffffff"
      strokeWidth="2"
      strokeLinecap="round"
    />
  </Svg>
);

const Minus = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <rect width="24" height="24" rx="8" fill={color} />

    <path
      d="M17 12L7 12"
      stroke="#ffffff"
      strokeWidth="2"
      strokeLinecap="round"
    />
  </Svg>
);

const Dropdown = ({ color }) => (
  <Svg viewBoxWidth={12} viewBoxHeight={12}>
    <path
      d="M2.98357 4.5H9.01404C9.43123 4.5 9.63982 5.00391 9.34451 5.29922L6.33045 8.31562C6.14763 8.49844 5.84998 8.49844 5.66717 8.31562L2.6531 5.29922C2.35779 5.00391 2.56638 4.5 2.98357 4.5Z"
      fill={color}
    />
  </Svg>
);

const Chevron = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      d="M9 18L14.9293 12.0707C14.9683 12.0317 14.9683 11.9683 14.9293 11.9293L9 6"
      stroke={color}
      strokeWidth="2"
      strokeLinecap="round"
    />
  </Svg>
);

const License = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M21 3H3C1.9 3 1 3.9 1 5V19C1 20.1 1.9 21 3 21H21C22.1 21 23 20.1 23 19V5C23 3.9 22.1 3 21 3ZM12 9C12 10.66 10.66 12 9 12C7.34 12 6 10.66 6 9C6 7.34 7.34 6 9 6C10.66 6 12 7.34 12 9ZM9 13.9C7 13.9 3 15 3 17V18H15V17C15 15 11 13.9 9 13.9Z"
      fill={color}
    />
  </Svg>
);

const House = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      d="M9.99778 19.3275V14.3275H13.9978V19.3275C13.9978 19.8775 14.4478 20.3275 14.9978 20.3275H17.9978C18.5478 20.3275 18.9978 19.8775 18.9978 19.3275V12.3275H20.6978C21.1578 12.3275 21.3778 11.7575 21.0278 11.4575L12.6678 3.9275C12.2878 3.5875 11.7078 3.5875 11.3278 3.9275L2.96778 11.4575C2.62778 11.7575 2.83778 12.3275 3.29778 12.3275H4.99778V19.3275C4.99778 19.8775 5.44778 20.3275 5.99778 20.3275H8.99778C9.54778 20.3275 9.99778 19.8775 9.99778 19.3275Z"
      fill={color}
    />
  </Svg>
);

const Car = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.5 4C18.16 4 18.72 4.42 18.92 5.01L20.89 10.68C20.96 10.89 21 11.12 21 11.34V18.5C21 19.33 20.3199 20 19.5 20C18.67 20 18 19.32 18 18.5V18H6V18.5C6 19.33 5.32996 20 4.5 20C3.67004 20 3 19.33 3 18.5V11.34C3 11.11 3.04004 10.89 3.10999 10.68L5.07996 5.01C5.29004 4.42 5.83997 4 6.5 4H17.5ZM5 13.5C5 14.33 5.67004 15 6.5 15C7.32996 15 8 14.33 8 13.5C8 12.67 7.32996 12 6.5 12C5.67004 12 5 12.67 5 13.5ZM17.5 15C16.67 15 16 14.33 16 13.5C16 12.67 16.67 12 17.5 12C18.33 12 19 12.67 19 13.5C19 14.33 18.33 15 17.5 15ZM6.27002 6.18L5 10H19L17.73 6.18C17.59 5.78 17.21 5.5 16.78 5.5H7.21997C6.79004 5.5 6.41003 5.78 6.27002 6.18Z"
      fill={color}
    />
  </Svg>
);

const Boat = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3.95107 19H4.00112C5.42116 19 6.70107 18.3 7.66115 17.36C7.85109 17.18 8.16115 17.18 8.35109 17.36C9.30117 18.3 10.5811 19 12.0011 19C13.4212 19 14.7011 18.3 15.6612 17.36C15.8511 17.17 16.1511 17.17 16.3511 17.36C17.3012 18.3 18.5811 19 20.0011 19H20.0512L21.9412 12.32C22.0211 12.06 22.0011 11.78 21.8811 11.54C21.7611 11.3 21.5412 11.12 21.2811 11.04L20.0011 10.62V6C20.0011 4.89999 19.1011 4 18.0011 4H15.0011V2C15.0011 1.45001 14.5512 1 14.0011 1H10.0011C9.45107 1 9.00112 1.45001 9.00112 2V4H6.00112C4.90114 4 4.00112 4.89999 4.00112 6V10.62L2.71108 11.04C2.45107 11.12 2.2311 11.3 2.1111 11.54C1.99111 11.78 1.96108 12.06 2.05117 12.32L3.95107 19ZM20.0011 21C18.7111 21 17.4212 20.59 16.2611 19.86C16.1011 19.76 15.8911 19.76 15.7311 19.86C13.4212 21.33 10.5711 21.33 8.26113 19.86C8.10109 19.76 7.89113 19.76 7.7311 19.86C6.58108 20.59 5.29116 21 4.00112 21H3.00112C2.45107 21 2.00112 21.45 2.00112 22C2.00112 22.55 2.45107 23 3.00112 23H4.00112C5.38112 23 6.74111 22.65 8.00112 22.01C10.5211 23.3 13.4811 23.3 16.0011 22.01C17.2611 22.66 18.6211 23 20.0011 23H21.0011C21.5512 23 22.0011 22.55 22.0011 22C22.0011 21.45 21.5512 21 21.0011 21H20.0011ZM17.0011 6H7.00112C6.45107 6 6.00112 6.45001 6.00112 7V9.97L11.3711 8.20001C11.7811 8.07001 12.2111 8.07001 12.6211 8.20001L18.0011 9.97V7C18.0011 6.45001 17.5512 6 17.0011 6Z"
      fill={color}
    />
  </Svg>
);

const Store = ({ color }) => (
  <Svg viewBoxWidth={18} viewBoxHeight={16}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M16 2H2C1.44995 2 1 1.54999 1 1C1 0.450012 1.44995 0 2 0H16C16.55 0 17 0.450012 17 1C17 1.54999 16.55 2 16 2ZM17.16 3.79999C17.0699 3.34003 16.66 3 16.1801 3H1.81995C1.33997 3 0.930054 3.34003 0.839966 3.79999L0 8V9C0 9.54999 0.449951 10 1 10V15C1 15.55 1.44995 16 2 16H10C10.55 16 11 15.55 11 15V10H15V15C15 15.55 15.45 16 16 16C16.55 16 17 15.55 17 15V10C17.55 10 18 9.54999 18 9V8L17.16 3.79999ZM9 14H3V10H9V14Z"
      fill={color}
    />
  </Svg>
);

const CloudVerify = ({ color }) => (
  <Svg viewBoxWidth={34} viewBoxHeight={23}>
    <path
      d="M26.8563 8.805C25.9213 4.06125 21.755 0.5 16.75 0.5C12.7762 0.5 9.325 2.755 7.60625 6.055C3.4675 6.495 0.25 10.0013 0.25 14.25C0.25 18.8013 3.94875 22.5 8.5 22.5H26.375C30.17 22.5 33.25 19.42 33.25 15.625C33.25 11.995 30.4312 9.0525 26.8563 8.805Z"
      fill={color}
    />
    <path
      d="M24.5626 13.5516C23.9613 14.1495 22.99 14.1495 22.3887 13.5516L19.151 10.3474C18.8623 10.061 18.7 9.67208 18.7 9.26655C18.7 8.86102 18.8623 8.47215 19.151 8.18571C19.7523 7.5878 20.7236 7.5878 21.3249 8.18571L23.4679 10.3167L30.3751 3.44843C30.9764 2.85052 31.9477 2.85052 32.549 3.44843C33.1503 4.04634 33.1503 5.0122 32.549 5.6101L24.5626 13.5516Z"
      fill="#ffffff"
      stroke="#274462"
    />
  </Svg>
);

const Copy = ({ color }) => (
  <Svg viewBoxWidth={16} viewBoxHeight={16}>
    <path
      d="M1.5 16C0.671562 16 -7.15256e-07 15.3284 -7.15256e-07 14.5V5.5C-7.15256e-07 4.67156 0.671562 4 1.5 4H10.5C11.3284 4 12 4.67156 12 5.5V14.5C12 15.3284 11.3284 16 10.5 16H1.5ZM10.5 3C11.8785 3 13 4.1215 13 5.5V12H14.5C15.3284 12 16 11.3284 16 10.5V1.5C16 0.671562 15.3284 -7.15256e-07 14.5 -7.15256e-07H5.5C4.67156 -7.15256e-07 4 0.671562 4 1.5V3H10.5Z"
      fill={color}
    />
  </Svg>
);

const Settings = ({ color }) => (
  <Svg viewBoxWidth={16} viewBoxHeight={16}>
    <path
      opacity="0.4"
      d="M15.2313 9.86558L13.9 9.09683C14.0344 8.37183 14.0344 7.62808 13.9 6.90308L15.2313 6.13433C15.3844 6.04683 15.4531 5.86558 15.4031 5.69683C15.0563 4.58433 14.4656 3.57808 13.6938 2.74058C13.575 2.61246 13.3813 2.58121 13.2313 2.66871L11.9 3.43746C11.3406 2.95621 10.6969 2.58433 10 2.34058V0.806206C10 0.631206 9.87814 0.478081 9.70627 0.440581C8.55939 0.184331 7.38439 0.196831 6.29377 0.440581C6.12189 0.478081 6.00002 0.631206 6.00002 0.806206V2.34371C5.30627 2.59058 4.66252 2.96246 4.10002 3.44058L2.77189 2.67183C2.61877 2.58433 2.42814 2.61246 2.30939 2.74371C1.53752 3.57808 0.946895 4.58433 0.60002 5.69996C0.546895 5.86871 0.61877 6.04996 0.771895 6.13746L2.10314 6.90621C1.96877 7.63121 1.96877 8.37496 2.10314 9.09996L0.771895 9.86871C0.61877 9.95621 0.55002 10.1375 0.60002 10.3062C0.946895 11.4187 1.53752 12.425 2.30939 13.2625C2.42814 13.3906 2.62189 13.4218 2.77189 13.3343L4.10314 12.5656C4.66252 13.0468 5.30627 13.4187 6.00314 13.6625V15.2C6.00314 15.375 6.12502 15.5281 6.29689 15.5656C7.44377 15.8218 8.61877 15.8093 9.70939 15.5656C9.88127 15.5281 10.0031 15.375 10.0031 15.2V13.6625C10.6969 13.4156 11.3406 13.0437 11.9031 12.5656L13.2344 13.3343C13.3875 13.4218 13.5781 13.3937 13.6969 13.2625C14.4688 12.4281 15.0594 11.4218 15.4063 10.3062C15.4531 10.1343 15.3844 9.95308 15.2313 9.86558ZM8.00002 10.5C6.62189 10.5 5.50002 9.37808 5.50002 7.99996C5.50002 6.62183 6.62189 5.49996 8.00002 5.49996C9.37814 5.49996 10.5 6.62183 10.5 7.99996C10.5 9.37808 9.37814 10.5 8.00002 10.5Z"
      fill={color}
    />
  </Svg>
);

const Warning = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <circle fill="#fafafa" cx="12" cy="12" r="12" />
    <path
      fill={color}
      d="M13.25 16.75C13.25 17.4404 12.6903 18 12 18C11.3096 18 10.75 17.4404 10.75 16.75C10.75 16.0596 11.3096 15.5 12 15.5C12.6903 15.5 13.25 16.0596 13.25 16.75Z"
    />
    <path
      fill={color}
      d="M10.5936 7.49708C10.5429 6.68582 11.1871 6 12 6C12.8128 6 13.4571 6.68582 13.4064 7.49708L13.0624 13.0019C13.0273 13.563 12.5621 14 12 14C11.4379 14 10.9727 13.563 10.9376 13.0019L10.5936 7.49708Z"
    />
  </Svg>
);

const ScrollArrow = ({ color }) => (
  <Svg viewBoxWidth={64} viewBoxHeight={64}>
    <path
      opacity="0.75"
      fillRule="evenodd"
      clipRule="evenodd"
      d="M0.151581 0.792358C0.505472 0.0845752 1.36613 -0.202311 2.07391 0.151581L32 15.1146L61.9261 0.151581C62.6339 -0.202311 63.4945 0.0845752 63.8484 0.792358C64.2023 1.50014 63.9154 2.3608 63.2076 2.71469L32 18.3185L0.792358 2.71469C0.0845752 2.3608 -0.202311 1.50014 0.151581 0.792358Z"
      fill={color}
    />
  </Svg>
);

const Mask = ({ color }) => (
  <Svg viewBoxWidth={100} viewBoxHeight={100}>
    <path
      d="M73.0546 55.7118L50.5644 57.5371C50.5015 57.5423 50.4382 57.5423 50.3753 57.5371L27.8851 55.7118C27.7218 55.6986 27.5577 55.7199 27.4029 55.7743C27.2482 55.8287 27.1062 55.9151 26.9859 56.028C26.8656 56.1409 26.7696 56.2779 26.7039 56.4304C26.6382 56.5829 26.6043 56.7475 26.6042 56.9139C26.6042 57.2172 26.7166 57.5094 26.919 57.7323C27.1214 57.9551 27.3989 58.0923 27.6964 58.1165L50.3753 59.957L50.4698 59.9651L73.2433 58.1157C73.5407 58.0915 73.8183 57.9543 74.0207 57.7315C74.2231 57.5086 74.3355 57.2164 74.3354 56.9131C74.3353 56.7468 74.3013 56.5822 74.2356 56.4298C74.1698 56.2775 74.0738 56.1406 73.9535 56.0278C73.8332 55.9149 73.6912 55.8286 73.5365 55.7742C73.3818 55.7199 73.2178 55.6986 73.0546 55.7118Z"
      fill={color}
    />
    <path
      d="M73.0546 50.083L50.5644 51.9083C50.5015 51.9136 50.4382 51.9136 50.3753 51.9083L27.8851 50.083C27.7218 50.0698 27.5577 50.0911 27.4029 50.1455C27.2482 50.1999 27.1062 50.2863 26.9859 50.3992C26.8656 50.5122 26.7696 50.6492 26.7039 50.8016C26.6382 50.9541 26.6043 51.1187 26.6042 51.2852C26.6042 51.5884 26.7166 51.8806 26.919 52.1035C27.1214 52.3263 27.3989 52.4635 27.6964 52.4877L50.3753 54.3283L50.4698 54.3363L73.2433 52.4869C73.5407 52.4627 73.8183 52.3255 74.0207 52.1027C74.2231 51.8798 74.3355 51.5876 74.3354 51.2843C74.3353 51.118 74.3013 50.9534 74.2356 50.8011C74.1698 50.6487 74.0738 50.5118 73.9535 50.399C73.8332 50.2861 73.6912 50.1998 73.5365 50.1455C73.3818 50.0911 73.2178 50.0698 73.0546 50.083Z"
      fill={color}
    />
    <path
      d="M18.2292 59.4131H9.31519C7.64029 59.4131 6.034 58.7368 4.84968 57.5331C3.66535 56.3293 3 54.6967 3 52.9944V40.1288C3 38.4264 3.66535 36.7938 4.84968 35.5901C6.034 34.3863 7.64029 33.7101 9.31519 33.7101H18.2292C18.544 33.7101 18.8458 33.8372 19.0683 34.0634C19.2909 34.2896 19.4159 34.5963 19.4159 34.9162C19.4159 35.2361 19.2909 35.5429 19.0683 35.7691C18.8458 35.9953 18.544 36.1224 18.2292 36.1224H9.31519C8.26976 36.1224 7.26714 36.5445 6.52791 37.2958C5.78868 38.0472 5.37339 39.0662 5.37339 40.1288V52.9944C5.37339 54.0569 5.78868 55.076 6.52791 55.8273C7.26714 56.5787 8.26976 57.0008 9.31519 57.0008H18.2292C18.544 57.0008 18.8458 57.1279 19.0683 57.3541C19.2909 57.5803 19.4159 57.887 19.4159 58.2069C19.4159 58.5268 19.2909 58.8336 19.0683 59.0598C18.8458 59.286 18.544 59.4131 18.2292 59.4131Z"
      fill={color}
    />
    <path
      d="M91.6203 59.4131H82.7062C82.3915 59.4131 82.0897 59.286 81.8671 59.0598C81.6446 58.8336 81.5195 58.5268 81.5195 58.2069C81.5195 57.887 81.6446 57.5803 81.8671 57.3541C82.0897 57.1279 82.3915 57.0008 82.7062 57.0008H91.6203C92.6657 57.0008 93.6683 56.5787 94.4075 55.8273C95.1468 55.076 95.5621 54.0569 95.5621 52.9944V40.1288C95.5621 39.0662 95.1468 38.0472 94.4075 37.2958C93.6683 36.5445 92.6657 36.1224 91.6203 36.1224H82.7062C82.3915 36.1224 82.0897 35.9953 81.8671 35.7691C81.6446 35.5429 81.5195 35.2361 81.5195 34.9162C81.5195 34.5963 81.6446 34.2896 81.8671 34.0634C82.0897 33.8372 82.3915 33.7101 82.7062 33.7101H91.6203C93.2952 33.7101 94.9015 34.3863 96.0858 35.5901C97.2701 36.7938 97.9355 38.4264 97.9355 40.1288V52.9944C97.9355 54.6967 97.2701 56.3293 96.0858 57.5331C94.9015 58.7368 93.2952 59.4131 91.6203 59.4131V59.4131Z"
      fill={color}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M83.6691 28.4901H17.2662C16.8078 28.4901 16.4362 28.8617 16.4362 29.3201V65.4382C16.4362 65.8528 16.7421 66.2038 17.1528 66.2605L49.9443 70.7835C50.0187 70.7937 50.0942 70.7938 50.1687 70.7838L83.78 66.2519C84.1919 66.1964 84.4992 65.8449 84.4992 65.4293V29.3201C84.4992 28.8617 84.1275 28.4901 83.6691 28.4901ZM17.2662 26C15.4325 26 13.946 27.4865 13.946 29.3201V65.4382C13.946 67.0966 15.1697 68.5007 16.8125 68.7273L49.6041 73.2502C49.9017 73.2913 50.2036 73.2917 50.5014 73.2516L84.1128 68.7197C85.7601 68.4976 86.9893 67.0916 86.9893 65.4293V29.3201C86.9893 27.4865 85.5028 26 83.6691 26H17.2662Z"
      fill={color}
    />
  </Svg>
);

const Gloves = ({ color }) => (
  <Svg viewBoxWidth={100} viewBoxHeight={100}>
    <path
      d="M87.1401 15.6782C87.1401 10.5404 81.9996 7.9755 78.2809 10.3883C78.2809 6.34665 75.4712 4 72.4891 4C69.5268 4 66.6972 6.32094 66.6972 10.3883C62.853 7.89468 57.838 10.7762 57.838 15.4739V40.5223C56.9284 36.9949 52.948 34.8408 49.5082 36.7157C47.596 35.6541 45.5015 35.8892 43.9157 36.8428C42.6378 37.6113 41.5877 38.9155 41.1606 40.4833V15.4739C41.1606 12.167 38.5623 9.4765 35.3687 9.4765C34.2427 9.4765 33.1911 9.81006 32.3014 10.3883C32.3014 6.28788 29.4342 4 26.5095 4C23.5465 4 20.7176 6.3202 20.7176 10.3883C19.8279 9.81079 18.7764 9.4765 17.6511 9.4765C14.649 9.4765 11.8592 11.8952 11.8592 15.6782C10.9687 15.1007 9.9172 14.7664 8.79189 14.7664C5.5983 14.7664 3.00001 17.4569 3.00001 20.7638V62.7993C2.9922 71.5878 9.33964 71.3601 9.3368 77.093C9.33397 82.3138 9.33397 75.1431 9.33397 86.2945C7.66799 86.7764 6.44264 88.3605 6.44264 90.2369V90.9069C6.44264 93.164 8.21575 95 10.3947 95H39.86C42.0397 95 43.8128 93.164 43.8128 90.9069V90.2369C43.8128 88.428 42.6733 86.8903 41.0981 86.3503C41.0981 78.439 40.8413 74.9587 42.4597 73.2982C46.8645 68.7813 47.4314 68.3875 49.4996 63.4862C51.4927 68.2097 52.0646 68.7093 56.5396 73.2982C58.1559 74.9557 57.9012 78.3934 57.9012 86.3503C56.3267 86.8903 55.1865 88.428 55.1865 90.2369V90.9069C55.1865 93.164 56.9603 95 59.1393 95H77.0506C77.0506 95 77.0506 94.3689 77.0506 93.5894C77.0506 92.8098 77.0506 92.1787 77.0506 92.1787H59.1393C58.4624 92.1787 57.9118 91.6086 57.9118 90.9069V90.2369C57.9118 89.5352 58.4624 88.9651 59.1393 88.9651H88.6046C89.2815 88.9651 89.8328 89.5352 89.8328 90.2369V90.9069C89.8328 91.6086 89.2815 92.1787 88.6046 92.1787H77.0506C77.0506 92.1787 77.0506 92.8098 77.0506 93.5894C77.0506 94.3689 77.0506 95 77.0506 95H88.6046C90.7843 95 92.5574 93.164 92.5574 90.9069V90.2369C92.5574 88.3605 91.3313 86.7764 89.6653 86.2945C89.6653 74.8617 89.666 82.7253 89.6632 77.093C89.6597 71.3718 96.0071 71.5798 95.9993 62.8V47.294C95.9993 47.294 95.2525 47.294 94.4997 47.294C93.7469 47.294 93.2747 47.294 93.2747 47.294V62.8015C93.2818 70.3807 86.9336 69.6791 86.9379 77.0937C86.9407 82.2991 86.9407 76.4589 86.9407 86.1438H60.6258C60.6258 72.6759 60.9358 73.8889 55.6406 68.4051C53.3162 66.0217 53.4077 65.7021 43.9987 43.406C43.9951 43.3972 43.9916 43.3883 43.988 43.3803C43.187 41.5817 44.0987 39.9955 45.2843 39.2821C46.6445 38.4651 48.2487 38.6576 49.7082 40.6405L56.761 50.2277C57.9842 51.8918 60.5633 50.9933 60.5633 48.8994V15.4739C60.5633 13.7224 61.9391 12.2978 63.6306 12.2978C65.3221 12.2978 66.6979 13.7224 66.6979 15.4739V47.5446C66.6979 48.3241 67.3074 48.9552 68.0602 48.9552C68.8123 48.9552 69.4225 48.3241 69.4225 47.5446V9.99741C69.4225 8.2466 70.7983 6.82127 72.4898 6.82127C74.1806 6.82127 75.5571 8.2466 75.5571 9.99741V47.5446C75.5571 48.3241 76.1666 48.9552 76.9194 48.9552C77.6715 48.9552 78.2817 48.3241 78.2817 47.5446V15.4739C78.2817 13.7224 79.6574 12.2978 81.3489 12.2978C83.0398 12.2978 84.4155 13.7224 84.4155 15.4739V47.5446C84.4155 48.3241 85.0257 48.9552 85.7785 48.9552C86.5306 48.9552 87.1408 48.3241 87.1408 47.5446V20.7638C87.1408 19.0123 88.5166 17.5877 90.2074 17.5877C91.8989 17.5877 93.2747 19.0123 93.2747 20.7638V47.294C93.2747 47.294 93.7469 47.294 94.4997 47.294C95.2525 47.294 95.9993 47.294 95.9993 47.294L96 20.7638C95.9993 16.0668 90.985 13.1831 87.1401 15.6782ZM41.5075 44.5484L42.0482 45.8298L41.1606 47.0369V43.5617C41.2471 43.8879 41.3607 44.2171 41.5075 44.5484ZM41.0882 90.9069C41.0882 91.6086 40.5369 92.1787 39.86 92.1787H10.3947C9.71782 92.1787 9.16723 91.6086 9.16723 90.9069V90.2369C9.16723 89.536 9.71782 88.9651 10.3947 88.9651H39.86C40.5369 88.9651 41.0882 89.536 41.0882 90.2369V90.9069ZM40.5426 71.294C38.0273 73.8728 38.3735 77.9386 38.3735 86.1438H12.0586C12.0586 73.0146 12.0571 85.1527 12.0614 77.0945C12.0656 69.6644 5.71821 70.4057 5.7246 62.8V20.7638C5.7246 19.0123 7.10037 17.5877 8.79189 17.5877C10.4834 17.5877 11.8592 19.0123 11.8592 20.7638V47.5446C11.8592 48.3241 12.4687 48.9552 13.2215 48.9552C13.9743 48.9552 14.5838 48.3241 14.5838 47.5446C14.5838 46.0759 14.5838 16.9367 14.5838 15.4739C14.5838 13.7224 15.9595 12.2978 17.6511 12.2978C19.3419 12.2978 20.7183 13.7224 20.7183 15.4739V47.5446C20.7183 48.3241 21.3278 48.9552 22.0806 48.9552C22.8327 48.9552 23.4429 48.3241 23.4429 47.5446C23.4429 46.7665 23.4429 14.0155 23.4429 9.99741C23.4429 8.2466 24.8187 6.82127 26.5102 6.82127C28.201 6.82127 29.5768 8.2466 29.5768 9.99741V47.5446C29.5768 48.3241 30.187 48.9552 30.9391 48.9552C31.6919 48.9552 32.3021 48.3241 32.3021 47.5446V15.4739C32.3021 13.7224 33.6779 12.2978 35.3694 12.2978C37.0602 12.2978 38.436 13.7224 38.436 15.4739V48.8994C38.436 50.9948 41.0158 51.8911 42.2383 50.2277L43.2977 48.7892L48.0132 59.9633C45.2084 66.6095 45.6263 66.0798 40.5426 71.294ZM55.0616 43.262C51.4814 38.3945 51.9575 39.044 51.8234 38.8559C53.8625 38.5937 56.0692 40.7845 55.0616 43.262ZM56.9504 45.8298C57.5925 44.3089 57.6926 44.1172 57.8387 43.5448V47.0369L56.9504 45.8298Z"
      fill={color}
    />
  </Svg>
);

const Sanitizer = ({ color }) => (
  <Svg viewBoxWidth={100} viewBoxHeight={100}>
    <path
      d="M71.3553 8.98109C71.249 8.79948 71.0969 8.64886 70.9144 8.5442C70.7318 8.43953 70.525 8.38446 70.3145 8.38446C70.1041 8.38446 69.8973 8.43953 69.7147 8.5442C69.5321 8.64886 69.3801 8.79948 69.2737 8.98109L58.2546 27.792C55.4947 26.571 52.5961 25.6914 49.6232 25.1728L48.3643 20.9004H48.724C49.3902 20.9004 49.8443 20.348 49.8443 19.6818V12.9783C49.8523 12.8289 49.8289 12.6794 49.7755 12.5397C49.7221 12.3999 49.6399 12.2729 49.5343 12.1669C49.4287 12.061 49.3019 11.9784 49.1624 11.9245C49.0228 11.8707 48.8734 11.8468 48.724 11.8543H42.0043V4.41642H62.4614L68.7299 7.22072C68.8879 7.28514 69.0579 7.31443 69.2283 7.30655C69.5046 7.30402 69.7719 7.20752 69.9861 7.03291C70.2003 6.8583 70.3487 6.61598 70.4069 6.34582C70.465 6.07567 70.4295 5.79375 70.3062 5.54645C70.1829 5.29914 69.979 5.10118 69.7282 4.98512L63.2217 2.07027C63.062 2.01248 62.8917 1.98992 62.7225 2.00413H29.7963C29.4764 2.00413 29.1696 2.13121 28.9434 2.3574C28.7172 2.5836 28.5902 2.89039 28.5902 3.21028C28.5902 3.53017 28.7172 3.83696 28.9434 4.06315C29.1696 4.28935 29.4764 4.41642 29.7963 4.41642H39.592V11.8543H32.9508C32.7973 11.8454 32.6436 11.8677 32.4991 11.9201C32.3545 11.9724 32.2221 12.0536 32.11 12.1588C31.9978 12.2639 31.9082 12.3908 31.8467 12.5317C31.7852 12.6726 31.753 12.8245 31.7521 12.9783V19.6818C31.7499 20.0022 31.8749 20.3104 32.0996 20.5389C32.3243 20.7673 32.6304 20.8973 32.9508 20.9004H33.3104L32.052 25.1728C28.3797 25.8438 25.0069 26.9338 22.1598 28.4037C16.8978 31.1203 14 34.8224 14 38.831C14 38.8477 14 38.8638 14.001 38.8805C14.0838 40.862 16.0515 87.4368 17.8955 94.0014C18.2078 95.0739 18.862 96.0149 19.7586 96.6811C20.6552 97.3474 21.745 97.7023 22.862 97.6918H58.8128C59.9299 97.7021 61.0197 97.347 61.9163 96.6806C62.8129 96.0142 63.4671 95.073 63.7793 94.0004C64.9141 89.9618 66.0963 70.8987 66.9121 55.0061C68.0301 55.2489 69.1705 55.3735 70.3146 55.3778C73.1626 55.3792 75.9605 54.6284 78.4252 53.2014C80.8899 51.7743 82.934 49.7216 84.3506 47.2509C85.7672 44.7802 86.5062 41.9791 86.4927 39.1311C86.4792 36.2832 85.7137 33.4892 84.2738 31.0321L71.3553 8.98109ZM34.1644 14.2666H47.432V18.4881H34.1644V14.2666ZM35.825 20.9004H45.8499L46.9905 24.7728C42.904 24.2671 38.7707 24.2675 34.6842 24.7742L35.825 20.9004ZM61.4571 93.3479C61.2883 93.9148 60.9383 94.4107 60.4607 94.7596C59.983 95.1085 59.4042 95.2911 58.8128 95.2795H22.862C22.2706 95.2911 21.6918 95.1085 21.2142 94.7596C20.7366 94.4107 20.3866 93.9148 20.2179 93.3479C18.8031 88.313 17.1107 55.4785 16.4123 38.7828C16.425 35.7306 18.858 32.8087 23.2672 30.5329C27.9402 28.1206 34.1805 26.7973 40.8382 26.7973C46.8508 26.7973 52.5378 27.8915 57.0279 29.8844L56.3561 31.0327C55.0005 33.3519 54.2421 35.9715 54.1491 38.6562C54.056 41.3409 54.6311 44.0067 55.8228 46.4143C55.8085 46.4143 55.7942 46.4306 55.7797 46.4306H25.8958C25.7407 46.4271 25.5865 46.4549 25.4424 46.5124C25.2983 46.5699 25.1673 46.6559 25.0571 46.7652C24.947 46.8745 24.8601 47.0048 24.8015 47.1485C24.7429 47.2922 24.7139 47.4462 24.7162 47.6013V88.4143C24.7091 88.7346 24.8293 89.0446 25.0505 89.2764C25.2716 89.5082 25.5756 89.6428 25.8958 89.6508H55.7789C56.4451 89.6508 57.0812 89.0805 57.0812 88.4143V48.3751C57.4832 49.1792 58.2143 49.9419 58.9232 50.6507C60.5212 52.2531 62.4414 53.4978 64.5567 54.3023C63.4257 76.4695 62.3112 90.3082 61.4571 93.3479ZM54.6689 48.8429V87.2385H27.1285V48.8429H54.6689ZM80.0482 48.945C77.6814 51.3116 74.5335 52.7349 71.1932 52.9485C67.853 53.1621 64.5494 52.1514 61.9004 50.1055C59.2515 48.0596 57.4387 45.1186 56.8012 41.8328C56.1637 38.5471 56.7452 35.1416 58.4369 32.2535L70.3146 11.977L82.1922 32.2535C83.7305 34.8812 84.3546 37.9447 83.9666 40.9649C83.5787 43.985 82.2007 46.7913 80.0482 48.945V48.945Z"
      fill={color}
    />
    <path
      d="M76.2845 34.1681H71.5546V29.3811C71.5546 29.0612 71.4275 28.7544 71.2013 28.5282C70.9751 28.302 70.6683 28.1749 70.3484 28.1749C70.0285 28.1749 69.7218 28.302 69.4956 28.5282C69.2694 28.7544 69.1423 29.0612 69.1423 29.3811V34.1681H64.3438C64.024 34.1681 63.7172 34.2951 63.491 34.5213C63.2648 34.7475 63.1377 35.0543 63.1377 35.3742C63.1377 35.6941 63.2648 36.0009 63.491 36.2271C63.7172 36.4533 64.024 36.5804 64.3438 36.5804H69.1423V41.3217C69.1423 41.6416 69.2694 41.9484 69.4956 42.1746C69.7218 42.4008 70.0285 42.5279 70.3484 42.5279C70.6683 42.5279 70.9751 42.4008 71.2013 42.1746C71.4275 41.9484 71.5546 41.6416 71.5546 41.3217V36.5804H76.2845C76.6044 36.5804 76.9112 36.4533 77.1374 36.2271C77.3636 36.0009 77.4906 35.6941 77.4906 35.3742C77.4906 35.0543 77.3636 34.7475 77.1374 34.5213C76.9112 34.2951 76.6044 34.1681 76.2845 34.1681V34.1681Z"
      fill={color}
    />
    <path
      d="M31.7677 65.3268H49.9067C50.2266 65.3268 50.5334 65.1998 50.7596 64.9736C50.9858 64.7474 51.1129 64.4406 51.1129 64.1207C51.1129 63.8008 50.9858 63.494 50.7596 63.2678C50.5334 63.0416 50.2266 62.9146 49.9067 62.9146H31.7677C31.4478 62.9146 31.141 63.0416 30.9148 63.2678C30.6886 63.494 30.5615 63.8008 30.5615 64.1207C30.5615 64.4406 30.6886 64.7474 30.9148 64.9736C31.141 65.1998 31.4478 65.3268 31.7677 65.3268V65.3268Z"
      fill={color}
    />
    <path
      d="M35.7118 57.286H45.964C46.2839 57.286 46.5907 57.1589 46.8169 56.9327C47.0431 56.7065 47.1702 56.3997 47.1702 56.0798C47.1702 55.7599 47.0431 55.4531 46.8169 55.2269C46.5907 55.0007 46.2839 54.8737 45.964 54.8737H35.7118C35.3919 54.8737 35.0851 55.0007 34.8589 55.2269C34.6327 55.4531 34.5056 55.7599 34.5056 56.0798C34.5056 56.3997 34.6327 56.7065 34.8589 56.9327C35.0851 57.1589 35.3919 57.286 35.7118 57.286V57.286Z"
      fill={color}
    />
    <path
      d="M31.7677 72.9658H49.9067C50.2266 72.9658 50.5334 72.8387 50.7596 72.6125C50.9858 72.3863 51.1129 72.0795 51.1129 71.7596C51.1129 71.4397 50.9858 71.1329 50.7596 70.9067C50.5334 70.6805 50.2266 70.5535 49.9067 70.5535H31.7677C31.4478 70.5535 31.141 70.6805 30.9148 70.9067C30.6886 71.1329 30.5615 71.4397 30.5615 71.7596C30.5615 72.0795 30.6886 72.3863 30.9148 72.6125C31.141 72.8387 31.4478 72.9658 31.7677 72.9658V72.9658Z"
      fill={color}
    />
    <path
      d="M31.7677 80.4037H49.9067C50.2266 80.4037 50.5334 80.2767 50.7596 80.0505C50.9858 79.8243 51.1129 79.5175 51.1129 79.1976C51.1129 78.8777 50.9858 78.5709 50.7596 78.3447C50.5334 78.1185 50.2266 77.9915 49.9067 77.9915H31.7677C31.4478 77.9915 31.141 78.1185 30.9148 78.3447C30.6886 78.5709 30.5615 78.8777 30.5615 79.1976C30.5615 79.5175 30.6886 79.8243 30.9148 80.0505C31.141 80.2767 31.4478 80.4037 31.7677 80.4037V80.4037Z"
      fill={color}
    />
  </Svg>
);

const VitaminC = ({ color }) => (
  <Svg viewBoxWidth={100} viewBoxHeight={100}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M59.9207 69.3032C59.9207 63.9293 64.277 59.573 69.6508 59.573C75.0246 59.573 79.381 63.9293 79.381 69.3032V86.5591C79.381 91.9329 75.0246 96.2892 69.6508 96.2892C64.277 96.2892 59.9207 91.9329 59.9207 86.5591V69.3032ZM76.381 79.4311V86.5591C76.381 90.276 73.3678 93.2892 69.6508 93.2892C65.9339 93.2892 62.9207 90.276 62.9207 86.5591V79.4311H76.381ZM76.381 76.4311H62.9207V69.3032C62.9207 65.5862 65.9339 62.573 69.6508 62.573C73.3678 62.573 76.381 65.5862 76.381 69.3032V76.4311Z"
      fill={color}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M28.1379 4.5C28.1226 4.5013 28.09 4.50483 28.0463 4.51334C27.9514 4.5318 27.8412 4.56648 27.7442 4.62312C27.6567 4.67421 27.5803 4.74192 27.5186 4.84999C27.4566 4.95867 27.3651 5.18609 27.3651 5.62259V16.1129C27.3651 16.5464 27.6489 16.9662 28.7392 17.302C29.2223 17.4508 29.7261 17.5304 30.1232 17.5712C30.3181 17.5912 30.4787 17.601 30.5871 17.6058C30.6411 17.6082 30.6816 17.6093 30.7063 17.6098L30.7311 17.6102C30.7319 17.6102 30.7326 17.6102 30.733 17.6102H60.2932H60.2943L60.2977 17.6102L60.3264 17.6098C60.3539 17.6094 60.3973 17.6085 60.4545 17.6066C60.569 17.6028 60.7369 17.5951 60.9399 17.5795C61.3522 17.5477 61.88 17.4855 62.3898 17.3677C62.9223 17.2447 63.317 17.0873 63.5453 16.929C63.6079 16.8857 63.6425 16.8527 63.66 16.8337V5.62259C63.66 5.18609 63.5684 4.95867 63.5064 4.84999C63.4447 4.74192 63.3683 4.67421 63.2808 4.62312C63.1838 4.56648 63.0736 4.5318 62.9788 4.51334C62.9351 4.50483 62.9024 4.5013 62.8872 4.5H28.1379ZM62.9146 3V1.5H28.1105V3C28.1105 1.5 28.1096 1.5 28.1088 1.5L28.107 1.5L28.1032 1.50002L28.095 1.50007L28.0758 1.50035C28.0618 1.50061 28.0455 1.50105 28.0269 1.50178C27.9898 1.50322 27.9435 1.50579 27.8893 1.51032C27.7814 1.51932 27.639 1.53631 27.473 1.56861C27.1469 1.63211 26.6957 1.76134 26.2314 2.03252C25.2047 2.6321 24.3651 3.78372 24.3651 5.62259V16.1129C24.3651 18.6767 26.5138 19.7556 27.856 20.1691C28.3401 20.3182 28.815 20.4158 29.2302 20.4801V21.8441C29.1556 21.8536 29.0789 21.8638 29.0001 21.8749C28.0055 22.0153 26.6532 22.2989 25.2801 22.8805C23.9076 23.4618 22.4549 24.3665 21.3416 25.781C20.2108 27.2178 19.5 29.094 19.5 31.4738V84.6749C19.5 87.2399 20.0656 89.2351 21.011 90.7623C21.9579 92.292 23.2256 93.2547 24.4699 93.8493C25.7015 94.4378 26.9126 94.668 27.7996 94.7555C28.247 94.7996 28.6233 94.8085 28.8941 94.8058C29.0298 94.8045 29.1399 94.8003 29.2203 94.796C29.246 94.7946 29.2686 94.7933 29.2882 94.792H64.4115V91.792H29.1651L29.1047 91.7975L29.1024 91.7977L29.1009 91.7978C29.0983 91.798 29.0944 91.7983 29.0893 91.7986C29.0822 91.799 29.0729 91.7996 29.0612 91.8002C29.021 91.8024 28.9542 91.8051 28.8648 91.806C28.6853 91.8077 28.4184 91.8019 28.094 91.77C27.4372 91.7052 26.59 91.5374 25.7633 91.1424C24.9493 90.7535 24.1587 90.1474 23.5618 89.1833C22.9635 88.2167 22.5 86.7931 22.5 84.6749L22.5 74.5606H60.2949V71.5606H22.5V44.5881H68.1508V60.3218C68.1508 60.3219 68.1508 60.3223 69.6508 60.3223C71.1508 60.3223 71.1508 60.3223 71.1508 60.3222V31.4738C71.1508 29.1085 70.4723 27.2402 69.3851 25.8035C68.3124 24.386 66.9087 23.4753 65.5775 22.889C64.2474 22.3031 62.9377 22.0175 61.9747 21.8761C61.9135 21.8671 61.8535 21.8587 61.7949 21.8508V20.5092C62.1828 20.4625 62.6204 20.3934 63.0651 20.2907C63.7488 20.1327 64.5704 19.8686 65.2543 19.3947C65.9732 18.8964 66.66 18.0663 66.66 16.8623V5.62259C66.66 3.78372 65.8204 2.6321 64.7937 2.03252C64.3293 1.76134 63.8782 1.63211 63.552 1.56861C63.3861 1.53631 63.2437 1.51932 63.1357 1.51032C63.0815 1.50579 63.0352 1.50322 62.9981 1.50178C62.9796 1.50105 62.9632 1.50061 62.9492 1.50035L62.9301 1.50007L62.9219 1.50002L62.9181 1.5L62.9163 1.5C62.9154 1.5 62.9146 1.5 62.9146 3ZM58.7949 20.6102H32.2302V21.7314H58.7949V20.6102ZM30.7302 24.7314L30.7227 24.7315C30.7114 24.7317 30.6913 24.732 30.6632 24.7328C30.607 24.7344 30.5186 24.7377 30.4027 24.7448C30.1704 24.7588 29.8305 24.7874 29.4195 24.8455C28.5898 24.9626 27.5095 25.1942 26.4501 25.6429C25.39 26.0919 24.4102 26.7327 23.6991 27.6363C23.0054 28.5177 22.5 29.7324 22.5 31.4738L22.5 41.5881H68.1508V31.4738C68.1508 29.7179 67.6599 28.4953 66.9928 27.6138C66.3113 26.7131 65.376 26.0784 64.3682 25.6344C63.3593 25.19 62.33 24.9604 61.5388 24.8443C61.1471 24.7868 60.8234 24.7584 60.6027 24.7445C60.4926 24.7376 60.4089 24.7343 60.3559 24.7328C60.3295 24.732 60.3108 24.7316 60.3004 24.7315L60.2949 24.7314H60.2937H60.2917H30.7328H30.7313H30.7302Z"
      fill={color}
    />
    <path
      d="M52.1172 66.1719C50.6719 66.7188 49.0312 66.9922 47.1953 66.9922C41.1797 66.9922 38.1719 64.082 38.1719 58.2617C38.1719 52.7539 41.1797 50 47.1953 50C49.0312 50 50.6719 50.2734 52.1172 50.8203V53.6328C50.6719 53.0078 49.1094 52.6953 47.4297 52.6953C43.4062 52.6953 41.3945 54.5508 41.3945 58.2617C41.3945 62.2852 43.4062 64.2969 47.4297 64.2969C49.1094 64.2969 50.6719 63.9844 52.1172 63.3594V66.1719Z"
      fill={color}
    />
  </Svg>
);

const VitaminD = ({ color }) => (
  <Svg viewBoxWidth={100} viewBoxHeight={100}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M59.9204 69.3032C59.9204 63.9293 64.2768 59.573 69.6506 59.573C75.0244 59.573 79.3807 63.9293 79.3807 69.3032V86.5591C79.3807 91.9329 75.0244 96.2892 69.6506 96.2892C64.2768 96.2892 59.9204 91.9329 59.9204 86.5591V69.3032ZM76.3807 79.4311V86.5591C76.3807 90.276 73.3675 93.2892 69.6506 93.2892C65.9336 93.2892 62.9204 90.276 62.9204 86.5591V79.4311H76.3807ZM76.3807 76.4311H62.9204V69.3032C62.9204 65.5862 65.9336 62.573 69.6506 62.573C73.3675 62.573 76.3807 65.5862 76.3807 69.3032V76.4311Z"
      fill={color}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M28.1379 4.5C28.1226 4.5013 28.09 4.50483 28.0463 4.51334C27.9514 4.5318 27.8412 4.56648 27.7442 4.62312C27.6567 4.67421 27.5803 4.74192 27.5186 4.84999C27.4566 4.95867 27.3651 5.18609 27.3651 5.62259V16.1129C27.3651 16.5464 27.6489 16.9662 28.7392 17.302C29.2223 17.4508 29.7261 17.5304 30.1232 17.5712C30.3181 17.5912 30.4787 17.601 30.5871 17.6058C30.6411 17.6082 30.6816 17.6093 30.7063 17.6098L30.7311 17.6102C30.7319 17.6102 30.7326 17.6102 30.733 17.6102H60.2932H60.2943L60.2977 17.6102L60.3264 17.6098C60.3539 17.6094 60.3973 17.6085 60.4545 17.6066C60.569 17.6028 60.7369 17.5951 60.9399 17.5795C61.3522 17.5477 61.88 17.4855 62.3898 17.3677C62.9223 17.2447 63.317 17.0873 63.5453 16.929C63.6079 16.8857 63.6425 16.8527 63.66 16.8337V5.62259C63.66 5.18609 63.5684 4.95867 63.5064 4.84999C63.4447 4.74192 63.3683 4.67421 63.2808 4.62312C63.1838 4.56648 63.0736 4.5318 62.9788 4.51334C62.9351 4.50483 62.9024 4.5013 62.8872 4.5H28.1379ZM62.9146 3V1.5H28.1105V3C28.1105 1.5 28.1096 1.5 28.1088 1.5L28.107 1.5L28.1032 1.50002L28.095 1.50007L28.0758 1.50035C28.0618 1.50061 28.0455 1.50105 28.0269 1.50178C27.9898 1.50322 27.9435 1.50579 27.8893 1.51032C27.7814 1.51932 27.639 1.53631 27.473 1.56861C27.1469 1.63211 26.6957 1.76134 26.2314 2.03252C25.2047 2.6321 24.3651 3.78372 24.3651 5.62259V16.1129C24.3651 18.6767 26.5138 19.7556 27.856 20.1691C28.3401 20.3182 28.815 20.4158 29.2302 20.4801V21.8441C29.1556 21.8536 29.0789 21.8638 29.0001 21.8749C28.0055 22.0153 26.6532 22.2989 25.2801 22.8805C23.9076 23.4618 22.4549 24.3665 21.3416 25.781C20.2108 27.2178 19.5 29.094 19.5 31.4738V84.6749C19.5 87.2399 20.0656 89.2351 21.011 90.7623C21.9579 92.292 23.2256 93.2547 24.4699 93.8493C25.7015 94.4378 26.9126 94.668 27.7996 94.7555C28.247 94.7996 28.6233 94.8085 28.8941 94.8058C29.0298 94.8045 29.1399 94.8003 29.2203 94.796C29.246 94.7946 29.2686 94.7933 29.2882 94.792H64.4115V91.792H29.1651L29.1047 91.7975L29.1024 91.7977L29.1009 91.7978C29.0983 91.798 29.0944 91.7983 29.0893 91.7986C29.0822 91.799 29.0729 91.7996 29.0612 91.8002C29.021 91.8024 28.9542 91.8051 28.8648 91.806C28.6853 91.8077 28.4184 91.8019 28.094 91.77C27.4372 91.7052 26.59 91.5374 25.7633 91.1424C24.9493 90.7535 24.1587 90.1474 23.5618 89.1833C22.9635 88.2167 22.5 86.7931 22.5 84.6749L22.5 74.5606H60.2949V71.5606H22.5V44.5881H68.1508V60.3218C68.1508 60.3219 68.1508 60.3223 69.6508 60.3223C71.1508 60.3223 71.1508 60.3223 71.1508 60.3222V31.4738C71.1508 29.1085 70.4723 27.2402 69.3851 25.8035C68.3124 24.386 66.9087 23.4753 65.5775 22.889C64.2474 22.3031 62.9377 22.0175 61.9747 21.8761C61.9135 21.8671 61.8535 21.8587 61.7949 21.8508V20.5092C62.1828 20.4625 62.6204 20.3934 63.0651 20.2907C63.7488 20.1327 64.5704 19.8686 65.2543 19.3947C65.9732 18.8964 66.66 18.0663 66.66 16.8623V5.62259C66.66 3.78372 65.8204 2.6321 64.7937 2.03252C64.3293 1.76134 63.8782 1.63211 63.552 1.56861C63.3861 1.53631 63.2437 1.51932 63.1357 1.51032C63.0815 1.50579 63.0352 1.50322 62.9981 1.50178C62.9796 1.50105 62.9632 1.50061 62.9492 1.50035L62.9301 1.50007L62.9219 1.50002L62.9181 1.5L62.9163 1.5C62.9154 1.5 62.9146 1.5 62.9146 3ZM58.7949 20.6102H32.2302V21.7314H58.7949V20.6102ZM30.7302 24.7314L30.7227 24.7315C30.7114 24.7317 30.6913 24.732 30.6632 24.7328C30.607 24.7344 30.5186 24.7377 30.4027 24.7448C30.1704 24.7588 29.8305 24.7874 29.4195 24.8455C28.5898 24.9626 27.5095 25.1942 26.4501 25.6429C25.39 26.0919 24.4102 26.7327 23.6991 27.6363C23.0054 28.5177 22.5 29.7324 22.5 31.4738L22.5 41.5881H68.1508V31.4738C68.1508 29.7179 67.6599 28.4953 66.9928 27.6138C66.3113 26.7131 65.376 26.0784 64.3682 25.6344C63.3593 25.19 62.33 24.9604 61.5388 24.8443C61.1471 24.7868 60.8234 24.7584 60.6027 24.7445C60.4926 24.7376 60.4089 24.7343 60.3559 24.7328C60.3295 24.732 60.3108 24.7316 60.3004 24.7315L60.2949 24.7314H60.2937H60.2917H30.7328H30.7313H30.7302Z"
      fill={color}
    />
    <path
      d="M46.3203 64.0625C49.7969 64.0625 51.5352 62.0156 51.5352 57.9219C51.5352 54.4375 49.7969 52.6953 46.3203 52.6953H42.8633V64.0625H46.3203ZM39.7578 66.7578V50H46.3203C51.8672 50 54.6406 52.6406 54.6406 57.9219C54.6406 63.8125 51.8672 66.7578 46.3203 66.7578H39.7578Z"
      fill={color}
    />
  </Svg>
);

const VitaminZn = ({ color }) => (
  <Svg viewBoxWidth={100} viewBoxHeight={100}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M59.9207 69.3032C59.9207 63.9293 64.277 59.573 69.6508 59.573C75.0246 59.573 79.381 63.9293 79.381 69.3032V86.5591C79.381 91.9329 75.0246 96.2892 69.6508 96.2892C64.277 96.2892 59.9207 91.9329 59.9207 86.5591V69.3032ZM76.381 79.4311V86.5591C76.381 90.276 73.3678 93.2892 69.6508 93.2892C65.9339 93.2892 62.9207 90.276 62.9207 86.5591V79.4311H76.381ZM76.381 76.4311H62.9207V69.3032C62.9207 65.5862 65.9339 62.573 69.6508 62.573C73.3678 62.573 76.381 65.5862 76.381 69.3032V76.4311Z"
      fill={color}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M28.1379 4.5C28.1226 4.5013 28.09 4.50483 28.0463 4.51334C27.9514 4.5318 27.8412 4.56648 27.7442 4.62312C27.6567 4.67421 27.5803 4.74192 27.5186 4.84999C27.4566 4.95867 27.3651 5.18609 27.3651 5.62259V16.1129C27.3651 16.5464 27.6489 16.9662 28.7392 17.302C29.2223 17.4508 29.7261 17.5304 30.1232 17.5712C30.3181 17.5912 30.4787 17.601 30.5871 17.6058C30.6411 17.6082 30.6816 17.6093 30.7063 17.6098L30.7311 17.6102C30.7319 17.6102 30.7326 17.6102 30.733 17.6102H60.2932H60.2943L60.2977 17.6102L60.3264 17.6098C60.3539 17.6094 60.3973 17.6085 60.4545 17.6066C60.569 17.6028 60.7369 17.5951 60.9399 17.5795C61.3522 17.5477 61.88 17.4855 62.3898 17.3677C62.9223 17.2447 63.317 17.0873 63.5453 16.929C63.6079 16.8857 63.6425 16.8527 63.66 16.8337V5.62259C63.66 5.18609 63.5684 4.95867 63.5064 4.84999C63.4447 4.74192 63.3683 4.67421 63.2808 4.62312C63.1838 4.56648 63.0736 4.5318 62.9788 4.51334C62.9351 4.50483 62.9024 4.5013 62.8872 4.5H28.1379ZM62.9146 3V1.5H28.1105V3C28.1105 1.5 28.1096 1.5 28.1088 1.5L28.107 1.5L28.1032 1.50002L28.095 1.50007L28.0758 1.50035C28.0618 1.50061 28.0455 1.50105 28.0269 1.50178C27.9898 1.50322 27.9435 1.50579 27.8893 1.51032C27.7814 1.51932 27.639 1.53631 27.473 1.56861C27.1469 1.63211 26.6957 1.76134 26.2314 2.03252C25.2047 2.6321 24.3651 3.78372 24.3651 5.62259V16.1129C24.3651 18.6767 26.5138 19.7556 27.856 20.1691C28.3401 20.3182 28.815 20.4158 29.2302 20.4801V21.8441C29.1556 21.8536 29.0789 21.8638 29.0001 21.8749C28.0055 22.0153 26.6532 22.2989 25.2801 22.8805C23.9076 23.4618 22.4549 24.3665 21.3416 25.781C20.2108 27.2178 19.5 29.094 19.5 31.4738V84.6749C19.5 87.2399 20.0656 89.2351 21.011 90.7623C21.9579 92.292 23.2256 93.2547 24.4699 93.8493C25.7015 94.4378 26.9126 94.668 27.7996 94.7555C28.247 94.7996 28.6233 94.8085 28.8941 94.8058C29.0298 94.8045 29.1399 94.8003 29.2203 94.796C29.246 94.7946 29.2686 94.7933 29.2882 94.792H64.4115V91.792H29.1651L29.1047 91.7975L29.1024 91.7977L29.1009 91.7978C29.0983 91.798 29.0944 91.7983 29.0893 91.7986C29.0822 91.799 29.0729 91.7996 29.0612 91.8002C29.021 91.8024 28.9542 91.8051 28.8648 91.806C28.6853 91.8077 28.4184 91.8019 28.094 91.77C27.4372 91.7052 26.59 91.5374 25.7633 91.1424C24.9493 90.7535 24.1587 90.1474 23.5618 89.1833C22.9635 88.2167 22.5 86.7931 22.5 84.6749L22.5 74.5606H60.2949V71.5606H22.5V44.5881H68.1508V60.3218C68.1508 60.3219 68.1508 60.3223 69.6508 60.3223C71.1508 60.3223 71.1508 60.3223 71.1508 60.3222V31.4738C71.1508 29.1085 70.4723 27.2402 69.3851 25.8035C68.3124 24.386 66.9087 23.4753 65.5775 22.889C64.2474 22.3031 62.9377 22.0175 61.9747 21.8761C61.9135 21.8671 61.8535 21.8587 61.7949 21.8508V20.5092C62.1828 20.4625 62.6204 20.3934 63.0651 20.2907C63.7488 20.1327 64.5704 19.8686 65.2543 19.3947C65.9732 18.8964 66.66 18.0663 66.66 16.8623V5.62259C66.66 3.78372 65.8204 2.6321 64.7937 2.03252C64.3293 1.76134 63.8782 1.63211 63.552 1.56861C63.3861 1.53631 63.2437 1.51932 63.1357 1.51032C63.0815 1.50579 63.0352 1.50322 62.9981 1.50178C62.9796 1.50105 62.9632 1.50061 62.9492 1.50035L62.9301 1.50007L62.9219 1.50002L62.9181 1.5L62.9163 1.5C62.9154 1.5 62.9146 1.5 62.9146 3ZM58.7949 20.6102H32.2302V21.7314H58.7949V20.6102ZM30.7302 24.7314L30.7227 24.7315C30.7114 24.7317 30.6913 24.732 30.6632 24.7328C30.607 24.7344 30.5186 24.7377 30.4027 24.7448C30.1704 24.7588 29.8305 24.7874 29.4195 24.8455C28.5898 24.9626 27.5095 25.1942 26.4501 25.6429C25.39 26.0919 24.4102 26.7327 23.6991 27.6363C23.0054 28.5177 22.5 29.7324 22.5 31.4738L22.5 41.5881H68.1508V31.4738C68.1508 29.7179 67.6599 28.4953 66.9928 27.6138C66.3113 26.7131 65.376 26.0784 64.3682 25.6344C63.3593 25.19 62.33 24.9604 61.5388 24.8443C61.1471 24.7868 60.8234 24.7584 60.6027 24.7445C60.4926 24.7376 60.4089 24.7343 60.3559 24.7328C60.3295 24.732 60.3108 24.7316 60.3004 24.7315L60.2949 24.7314H60.2937H60.2917H30.7328H30.7313H30.7302Z"
      fill={color}
    />
    <path
      d="M44.8867 50V52.6953L35.9688 64.0625H44.8867V66.7578H32.4648V64.0625L41.7695 52.6953H32.6992V50H44.8867Z"
      fill={color}
    />
    <path
      d="M47.1133 66.7578V54.4531H49.5156L49.9023 56.2578C51.082 55.0547 52.4258 54.4531 53.9336 54.4531C56.8477 54.4531 58.3047 55.9688 58.3047 59V66.7578H55.1992V59C55.1992 57.6406 54.5234 56.9609 53.1719 56.9609C52.1641 56.9609 51.1797 57.3633 50.2188 58.168V66.7578H47.1133Z"
      fill={color}
    />
  </Svg>
);

const Location = ({ color }) => (
  <Svg viewBoxWidth={24} viewBoxHeight={24}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M5 9.26501C5 5.39502 8.13 2.26501 12 2.26501C15.87 2.26501 19 5.39502 19 9.26501C19 13.435 14.58 19.185 12.77 21.375C12.37 21.855 11.64 21.855 11.24 21.375C9.41998 19.185 5 13.435 5 9.26501ZM9.5 9.26501C9.5 10.645 10.62 11.765 12 11.765C13.38 11.765 14.5 10.645 14.5 9.26501C14.5 7.88501 13.38 6.76501 12 6.76501C10.62 6.76501 9.5 7.88501 9.5 9.26501Z"
      fill={color}
    />
  </Svg>
);
